#BlueJ class context
comment0.target=NoteBook
comment0.text=\r\n\ A\ class\ to\ maintain\ an\ arbitrary\ number\ of\ notes.\r\n\ Details\ are\ indexed\ by\ title\ of\ the\ note.\r\n\ \r\n
comment1.params=
comment1.target=NoteBook()
comment1.text=\r\n\ Perform\ any\ initialization\ for\ the\ notebook.\r\n
comment2.params=key
comment2.target=NoteDetails\ getDetails(java.lang.String)
comment2.text=\r\n\ Look\ up\ a\ note\ ad\ return\ it's\ details\r\n\ @param\ key\ The\ title\ looked\ up.\r\n\ @return\ The\ details\ corresponding\ to\ the\ key.\r\n
comment3.params=key
comment3.target=boolean\ keyInUse(java.lang.String)
comment3.text=\r\n\ Return\ whether\ or\ not\ the\ current\ key\ is\ in\ use.\r\n\ @param\ key\ The\ title\ to\ be\ looked\ up\r\n\ @return\ true\ if\ the\ key\ is\ in\ use,\ false\ otherwise.\r\n
comment4.params=details
comment4.target=void\ addDetails(NoteDetails)
comment4.text=\r\n\ Add\ a\ new\ set\ of\ details\ to\ the\ notebook\r\n\ @param\ details\ The\ details\ to\ associate\ with\ the\ new\ note\r\n
comment5.params=
comment5.target=int\ getNumberOfEntries()
comment5.text=\r\n\ Return\ the\ number\ of\ entries\ currently\ in\ the\r\n\ notebook\r\n\ @return\ The\ number\ of\ entries.\r\n
comment6.params=key
comment6.target=void\ removeDetails(java.lang.String)
comment6.text=\r\n\ Remove\ the\ entry\ with\ the\ given\ key\ from\ the\ notebook.\r\n\ The\ key\ should\ be\ one\ that\ is\ currently\ in\ use.\r\n\ @param\ key\ One\ of\ the\ keys\ of\ the\ entry\ to\ be\ removed.\r\n\ @throws\ IllegalArgumentException\ If\ the\ key\ is\ null.\r\n
comment7.params=
comment7.target=java.lang.String\ listDetails()
comment7.text=\r\n\ Return\ all\ the\ note\ details,\ sorted\ according\r\n\ to\ the\ sort\ order\ of\ the\ NoteDetails\ class.\r\n\ @return\ A\ sorted\ list\ of\ the\ details.\r\n
numComments=8
